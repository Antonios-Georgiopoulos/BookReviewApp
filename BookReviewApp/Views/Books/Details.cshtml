@using System.Security.Claims
@model BookReviewApp.Models.ViewModels.BookDetailsViewModel

@{
    ViewData["Title"] = Model.Book.Title;
}

<!-- Στοιχεία Βιβλίου -->
<div class="row mb-4">
    <div class="col-md-8">
        <h1>@Model.Book.Title</h1>
        <h4 class="text-muted mb-3">@Model.Book.Author</h4>

        <div class="mb-3">
            <span class="badge bg-secondary me-2">@Model.Book.Genre</span>
            <span class="badge bg-info me-2">@Model.Book.PublishedYear</span>

            @if (Model.Book.AverageRating > 0)
            {
                <span class="badge bg-warning text-dark">
                    <i class="fas fa-star"></i> @Model.Book.AverageRating.ToString("F1")
                </span>
            }
        </div>

        @if (Model.Book.ReviewCount > 0)
        {
            <div class="mb-3">
                <div class="d-flex align-items-center">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <i class="fas fa-star @(i <= Model.Book.AverageRating ? "text-warning" : "text-muted") me-1"></i>
                    }
                    <span class="ms-2">
                        <strong>@Model.Book.AverageRating.ToString("F1")</strong> από @Model.Book.ReviewCount κριτικές
                    </span>
                </div>
            </div>
        }
        else
        {
            <p class="text-muted">Αυτό το βιβλίο δεν έχει ακόμα κριτικές.</p>
        }

        <small class="text-muted">
            Προστέθηκε: @Model.Book.DateCreated.ToString("dd/MM/yyyy HH:mm")
        </small>
    </div>

    <div class="col-md-4">
        <div class="d-flex flex-column gap-2">
            <a asp-action="Index" class="btn btn-outline-primary">
                <i class="fas fa-arrow-left"></i> Πίσω στη Λίστα
            </a>

            @if (User.Identity.IsAuthenticated)
            {
                <a asp-action="Edit" asp-route-id="@Model.Book.Id" class="btn btn-warning">
                    <i class="fas fa-edit"></i> Επεξεργασία
                </a>
                <a asp-action="Delete" asp-route-id="@Model.Book.Id" class="btn btn-danger">
                    <i class="fas fa-trash"></i> Διαγραφή
                </a>
            }
        </div>
    </div>
</div>

<!-- Προσθήκη Κριτικής -->
@if (Model.CanAddReview && !Model.UserHasReviewed)
{
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0"><i class="fas fa-pen"></i> Γράψτε την κριτική σας</h5>
        </div>
        <div class="card-body">
            <form asp-action="AddReview" method="post">
                @Html.AntiForgeryToken()

                <!-- Hidden fields για όλα τα απαραίτητα πεδία του Book -->
                <input asp-for="Book.Id" type="hidden" />
                <input asp-for="Book.Title" type="hidden" />
                <input asp-for="Book.Author" type="hidden" />
                <input asp-for="Book.Genre" type="hidden" />
                <input asp-for="Book.PublishedYear" type="hidden" />
                <input asp-for="Book.DateCreated" type="hidden" />
                <input asp-for="Book.AverageRating" type="hidden" />
                <input asp-for="Book.ReviewCount" type="hidden" />

                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <!-- ΑΞΙΟΛΟΓΗΣΗ (διορθωμένο) -->
                <div class="mb-3">
                    <label class="form-label">Αξιολόγηση</label>
                    <div class="rating-input">
                        @for (int i = 5; i >= 1; i--)
                        {
                            <!-- Χρησιμοποιούμε asp-for για να κρατάει την επιλογή σε validation errors -->
                            <input asp-for="NewReview.Rating" type="radio" value="@i" id="rating@(i)" />
                            <label for="rating@(i)" class="star-label" aria-label="@i αστέρια">
                                <i class="fas fa-star"></i>
                            </label>
                        }
                    </div>
                    <small class="text-muted">Κάντε κλικ σε ένα αστέρι για να επιλέξετε βαθμολογία</small>
                    <span asp-validation-for="NewReview.Rating" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="NewReview.Content" class="form-label">Κριτική</label>
                    <textarea asp-for="NewReview.Content" class="form-control" rows="4"
                              placeholder="Μοιραστείτε τη γνώμη σας για αυτό το βιβλίο..."></textarea>
                    <span asp-validation-for="NewReview.Content" class="text-danger"></span>
                </div>

                <button type="submit" class="btn btn-success">
                    <i class="fas fa-paper-plane"></i> Αποστολή Κριτικής
                </button>
            </form>
        </div>
    </div>
}
else if (Model.UserHasReviewed)
{
    <div class="alert alert-info">
        <i class="fas fa-info-circle"></i> Έχετε ήδη γράψει κριτική για αυτό το βιβλίο.
    </div>
}
else if (!Model.CanAddReview)
{
    <div class="alert alert-warning">
        <i class="fas fa-sign-in-alt"></i>
        <a asp-area="Identity" asp-page="/Account/Login">Συνδεθείτε</a> για να γράψετε κριτική.
    </div>
}

<!-- Κριτικές -->
<div class="card">
    <div class="card-header">
        <h5 class="mb-0">
            <i class="fas fa-comments"></i>
            Κριτικές (@Model.Reviews.Count())
        </h5>
    </div>
    <div class="card-body">
        @if (!Model.Reviews.Any())
        {
            <p class="text-muted mb-0">
                <i class="fas fa-comment-slash"></i> Δεν υπάρχουν κριτικές για αυτό το βιβλίο.
            </p>
        }
        else
        {
            @foreach (var review in Model.Reviews)
            {
                <partial name="_ReviewItem" model="review" />
            }
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <style>
        /* ΔΙΟΡΘΩΣΗ RATING: μόνο CSS, χωρίς JS */
        .rating-input {
            display: inline-flex;
            flex-direction: row-reverse; /* ώστε το 5 να εμφανίζεται δεξιά */
            gap: 6px;
            margin-bottom: 10px;
        }

            .rating-input input {
                display: none; /* κρύβουμε τα radio */
            }

        .star-label {
            cursor: pointer;
            font-size: 1.6rem;
            line-height: 1;
            transition: color 0.15s ease-in-out;
        }

            .star-label i {
                color: #ddd;
            }

        /* Hover: βάφει το τρέχον και όλα τα "επόμενα" labels στο DOM.
                   Επειδή έχουμε row-reverse + φθίνουσα σειρά 5→1, αυτά είναι οπτικά τα αριστερά (δηλ. μέχρι το επιλεγμένο). */
        .rating-input label:hover i,
        .rating-input label:hover ~ label i {
            color: #ffc107;
        }

        /* Checked: όταν έχει επιλεγεί ένα radio, βάψε το label του και όσα ακολουθούν στο DOM (οπτικά μέχρι αριστερά). */
        .rating-input input:checked ~ label i {
            color: #ffc107;
        }
    </style>

    <script>
        $(function () {
            // Voting system (μένει ως έχει)
            $('.vote-btn').on('click', function (e) {
                e.preventDefault();

                var reviewId = $(this).data('review-id');
                var isUpvote = $(this).data('vote');
                var bookId = $(this).data('book-id');

                $.ajax({
                    url: '@Url.Action("VoteReview", "Books")',
                    type: 'POST',
                    data: {
                        reviewId: reviewId,
                        isUpvote: isUpvote,
                        bookId: bookId,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function () {
                        alert('Παρουσιάστηκε σφάλμα κατά την ψηφοφορία.');
                    }
                });
            });
        });
    </script>
}
